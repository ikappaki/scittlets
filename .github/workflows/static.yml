# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  release:
    types: [published]

# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: rebase
        run: |
          # The target dir, it is named after the repo since this is
          # how github-pages will be stored, useful for local testing.
          TARGET="./scittlets"
          rm -fr $TARGET
          mkdir -p $TARGET

          DIRS="./examples ./test/scittlets"
          echo :github-pages/info :target $TARGET :source-dirs $DIRS

          # copy html and cljs files
          for dir in $DIRS; do
            find "$dir" \( -name '*.html' -o -name '*.cljs' \) -exec cp --parents {} $TARGET/ \;
          done
          cp index.html $TARGET
          ls -R $TARGET

          # Update HTML root to github pages target dir
          find $TARGET -name "*.html" -exec sed -i 's|<base href="/">|<base href="/scittlets/">|g' {} \;
          sed -i "s|version>main</span>|version>${TAG_NAME}</span>|" $TARGET/index.html

          # Regenerate catalog.json from TAG_NAME
          npm run scittlets --silent -- catalog ./catalog.json -r ${TAG_NAME} > $TARGET/catalog.json
          sed -i '1d' $TARGET/catalog.json

          # use updated catalog to update HTML files deps in TARGET
          cat $TARGET/catalog.json
          npm run updateLocalHtmlFiles $TARGET/catalog.json $TARGET

        env:
          TAG_NAME: ${{ github.event.release.tag_name }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./scittlets
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Upload catalog.json to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./scittlets/catalog.json

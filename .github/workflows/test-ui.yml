name: Test UI

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  push:
    branches: [ main ]

jobs:
  test-ui:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4

    # - name: Clojure deps cache
    #   uses: actions/cache@v4
    #   with:
    #     path: |
    #       ~/.gitlibs
    #     enableCrossOsArchive: true
    #     key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
    #     restore-keys: cljdeps-

    - name: "Setup Java"
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    # - name: Install Clojure Tools
    #   uses: DeLaGuardo/setup-clojure@13.2
    #   with:
    #     bb: 'latest'

    # This assumes downloaded deps are same for all OSes
    # - name: Bring down deps
    #   run: bb download-deps

    - name: Install Ubuntu X11 Utils
      if: "startsWith (matrix.os, 'ubuntu')"
      run: |
        sudo apt-get update
        sudo apt-get -y install x11-utils

    - name: Install Linux Windows Manager
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: sudo apt-get -y install fluxbox

    # No longer pre-installed on macOS github action runners
    # - name: Install Image Magick on macOS
    #   if: ${{ matrix.os == 'macos' && contains(matrix.needs, 'imagemagick') }}
    #   run: brew install imagemagick

    # No longer pre-install on ubuntu github action runners
    # - name: Install Image Magick on ubuntu
    #   if: ${{ matrix.os == 'ubuntu' && contains(matrix.needs, 'imagemagick') }}
    #   run: sudo apt-get -y install imagemagick

    # No longer pre-installed on macOS github action runners
    # - name: Install Microsoft Edge on macOS
    #   if: ${{ matrix.os == 'macos' && contains(matrix.needs, 'edge') }}
    #   run: |
    #     brew install --cask microsoft-edge
    #     EDGE_VERSION=$(defaults read /Applications/Microsoft\ Edge.app/Contents/Info CFBundleShortVersionString)
    #     MAJOR_VERSION=$(echo $EDGE_VERSION | cut -d'.' -f1)
    #     DRIVER_VERSION=$(curl -s "https://msedgedriver.azureedge.net/LATEST_RELEASE_${MAJOR_VERSION}_MACOS" | iconv -f UTF-16LE -t UTF-8 | sed 's/^\xEF\xBB\xBF//' | tr -d '\r\n')
    #     echo "Installing msedgedriver version ${DRIVER_VERSION} for Edge version ${EDGE_VERSION}"
    #     DRIVER_URL="https://msedgedriver.azureedge.net/${DRIVER_VERSION}/edgedriver_mac64_m1.zip"
    #     wget $DRIVER_URL
    #     mkdir $RUNNER_TEMP/edgedriver
    #     unzip edgedriver_mac64_m1.zip -d $RUNNER_TEMP/edgedriver
    #     echo "$RUNNER_TEMP/edgedriver" >> $GITHUB_PATH

    # No longer pre-installed on macOS github action runners
    - name: Install Firefox on macOS
      if: ${{ matrix.os == 'macos' && contains(matrix.needs, 'firefox') }}
      run: |
        brew install --cask firefox
        brew install geckodriver

    # - uses: browser-actions/setup-firefox@v1
    # - run: firefox --version

    # - name: Install gecko
    #   uses: browser-actions/setup-geckodriver@latest
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
    # - run: geckodriver --version

    - name: Restore Clojure deps from cache
      uses: actions/cache/restore@v4
      with:
        path: |
          ~/.m2/repository
          ~/.deps.clj
          ~/.gitlibs
        enableCrossOsArchive: true
        key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
        restore-keys: cljdeps-

    # - name: Cache fixup for Windows
    #   # cache is restored using relative paths from Linux, this is not appropriate for Windows
    #   # this is admitedly fragile/hackey, will revisit if it cracks
    #   if: ${{ matrix.os == 'windows' }}
    #   run: |
    #     mv ../../../.m2 ${USERPROFILE}
    #     mv ../../../.deps.clj ${USERPROFILE}
    #     mv ../../../.gitlibs ${USERPROFILE}
    #   shell: bash

    # - name: Setup Java
    #   uses: actions/setup-java@v4
    #   with:
    #     distribution: 'temurin'
    #     java-version: ${{ matrix.jdk-version }}

    - name: Install Clojure Tools
      uses: DeLaGuardo/setup-clojure@13.2
      with:
        bb: 'latest'

    # - name: Tools versions
    #   run: bb tools-versions

    - name: Run Tests
      run: |
        bb tools-versions
        # Xvfb :99 -screen 0 1920x1080x24 &
        # export DISPLAY=:99
        bb test:bb

